Задание 2. Помочь программисту Пете победить эрроры и ворнинги
У программиста Пети есть код на PHP. У него было N фатальных ошибок и M ворнингов.
Петя решил заставить код работать без ошибок и ворнингов, для чего ему его друг подарил подписку на хорошую IDE и github,
так как только с помощью этих инструментов Петя смог бы найти и устранить все проблемы. Петя не очень опытный разработчик. 
Если Петя исправляет одну фатальную ошибку за коммит, то вместо неё появляется одна новая,
если исправляет ворнинг в коммите, то вместо него появляется два новых ворнинга. 
Если Петя исправляет два ворнинга за один коммит, то появляется одна новая фатальная ошибка,
и только когда Петя исправляет сразу две фатальные ошибки за один коммит, то не появляется ничего нового. 
Петя считает, что код будет полностью рабочим только если исправить все фатальные ошибки и ворнинги.
Определить минимальное количество коммитов, нужное для исправления всех багов.
Написать php-скрипт, который определит минимальное количество коммитов, необходимых для исправления кода.
Входные данные
В форму на странице можно ввести два числа N, M (0 ≤ N, M ≤ 1000).
Выходные данные
Нужно вывести одно число – минимальное количество коммитов, или -1, если исправить код Пети невозможно.
Пример входных данных:
3 3
Пример выходных данных:
9
================================================================================================================================================================
Выделим четыре замены (исправили -> получили):
Error - E; Warning - W;
1) 1 E -> 1 E (данную замену можно вычеркнуть);
A) 1 W -> 2 W;
B) 2 W -> 1 E;
C) 2 E -> ничего не получаем.

В общем алгоритм решения очень прост:
любое количество ошибок и предупреждений легко, путём деления на два, сводится к четырём вариантам:
1:|0ERROR||1WARNING|=>a->a->b->a->b->c=>избавились от ошибок и предупреждений.
2:|1ERROR||1WARNING|=>a->b->c=>избавились от ошибок и предупреждений.
3:|0ERROR||0WARNING|=>избавились от ошибок и предупреждений.
4:|1ERROR||0WARNING|=>невозможно избавиться от ошибок и предупреждений
Алгоритм:
-1. Если количество предупреждений равно нулю и количество ошибок нечётное, то невозможно избавиться от ошибок и предупреждений, то есть возвращаем -1.
0.Если количества предупреждений чётное и при выполнении шага B ошибок становится нечётное количество, то увеличиваем количество предупреждений на один
(что соответствует шагу 2) и увеличиваем общее количество шагов на еденицу.
1. Количеству шагов, типа B, присваиваем целую часть от деления на 2 количества предупреждений.
2. Количество предупреждений приравниваем к остатку от деления количества предупреждений на два.
3. Увеличиваем количество ошибок на количество шагов типа B.
4. увеличиваем количетво шагов типа C на целую часть от деления количества ошибок.
5. Количество ошибок приравниваем к остатку от деления количества ошибок на два.
6. Суммируем количество шагов типа B и C и получаем общее количество шагов.
Далее, в зависимости от того, сколько у нас ошибок и предупреждений, а их может быть четыре варианта, как было показано чуть выше,
к общему количеству шагов прибавляем 6,3,0 или невозможно изьавиться от ошибок и предупреждений.